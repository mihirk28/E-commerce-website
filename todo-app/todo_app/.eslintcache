[{"C:\\Users\\acer\\Desktop\\learn-react\\todo-app\\todo_app\\src\\reportWebVitals.js":"1","C:\\Users\\acer\\Desktop\\learn-react\\todo-app\\todo_app\\src\\firebase.js":"2","C:\\Users\\acer\\Desktop\\learn-react\\todo-app\\todo_app\\src\\index.js":"3","C:\\Users\\acer\\Desktop\\learn-react\\todo-app\\todo_app\\src\\App.js":"4","C:\\Users\\acer\\Desktop\\learn-react\\todo-app\\todo_app\\src\\Todo.js":"5"},{"size":362,"mtime":1612969523980,"results":"6","hashOfConfig":"7"},{"size":421,"mtime":1612460627056,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1610472426818,"results":"9","hashOfConfig":"7"},{"size":1696,"mtime":1612970012947,"results":"10","hashOfConfig":"7"},{"size":1958,"mtime":1612969593737,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xrab2c",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\acer\\Desktop\\learn-react\\todo-app\\todo_app\\src\\reportWebVitals.js",[],"C:\\Users\\acer\\Desktop\\learn-react\\todo-app\\todo_app\\src\\firebase.js",[],["24","25"],"C:\\Users\\acer\\Desktop\\learn-react\\todo-app\\todo_app\\src\\index.js",[],"C:\\Users\\acer\\Desktop\\learn-react\\todo-app\\todo_app\\src\\App.js",[],"C:\\Users\\acer\\Desktop\\learn-react\\todo-app\\todo_app\\src\\Todo.js",["26"],"import { Button, List, ListItem, ListItemAvatar, ListItemText, Modal } from '@material-ui/core'\r\nimport './Todo.css';\r\nimport React, {useState} from 'react';\r\nimport db from './firebase';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nfunction Todo(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [input, setInput] = useState('');\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const updateTodo = () => {\r\n        // Update the todo with the new input text\r\n\r\n        db.collection('todos').doc(props.todo.id).set({\r\n            todo: input\r\n        }, {merge: true })\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n        <Modal\r\n            open={open}\r\n            onClose={e => setOpen(false)}\r\n        >  \r\n            <div className = {classes.paper}>\r\n                <h1>Edit your task</h1>\r\n                <input placeholder = {props.todo.todo} value = {input} onChange = {event => setInput(event.target.value)} />\r\n                <Button onClick={updateTodo}>Update Todo</Button>\r\n            </div>  \r\n        </Modal>\r\n        <List>\r\n            <ListItem>\r\n                <ListItemAvatar></ListItemAvatar>\r\n                <ListItemText primary = {props.todo.todo} secondary = \"Dummy Deadline ⏰\"   />\r\n            </ListItem> \r\n            <button onClick={e => setOpen(true)}>Edit</button>\r\n            <DeleteForeverIcon onClick = {event => db.collection('todos').doc(props.todo.id).delete()} />    \r\n        </List>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":24,"column":11,"nodeType":"33","messageId":"34","endLine":24,"endColumn":21},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'handleOpen' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]